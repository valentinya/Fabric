{"version":3,"sources":["components/App/App.tsx"],"names":[],"mappings":"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","file":"components/App/App.js","sourcesContent":["import * as React from 'react';\nimport {\n  css\n} from 'office-ui-fabric-react/lib/Utilities';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\nimport { Nav } from 'office-ui-fabric-react/lib/Nav';\nimport { withResponsiveMode, ResponsiveMode } from 'office-ui-fabric-react/lib/utilities/decorators/withResponsiveMode';\nimport { INavLink, INavLinkGroup } from 'office-ui-fabric-react/lib/Nav';\nimport { Header } from '../Header/Header';\nimport './App.scss';\n\nexport enum ExampleStatus {\n  placeholder = 0,\n  started = 1,\n  beta = 2,\n  release = 3\n}\n\nexport interface IAppLink extends INavLink {\n  getComponent?: (cb: (obj: any) => void) => any;\n  component?: any;\n}\n\nexport interface IAppLinkGroup extends INavLinkGroup {\n  links: IAppLink[];\n}\n\nexport interface IAppDefinition {\n  appTitle: string;\n  testPages: IAppLink[];\n  examplePages: IAppLinkGroup[];\n  headerLinks: IAppLink[];\n}\n\nexport interface IAppProps extends React.Props<App> {\n  responsiveMode?: ResponsiveMode;\n  appDefinition?: IAppDefinition;\n}\n\nexport interface IAppState {\n  isMenuVisible: boolean;\n}\n\n@withResponsiveMode\nexport class App extends React.Component<IAppProps, any> {\n\n  constructor(props: IAppProps) {\n    super(props);\n\n    this.state = {\n      isMenuVisible: false\n    };\n\n    this._onIsMenuVisibleChanged = this._onIsMenuVisibleChanged.bind(this);\n    this._onLinkClick = this._onLinkClick.bind(this);\n  }\n\n  public render() {\n    let { responsiveMode, appDefinition } = this.props;\n    let { isMenuVisible } = this.state;\n\n    let navPanel = (\n      <Nav groups={ appDefinition.examplePages } onLinkClick={ this._onLinkClick } onRenderLink={ (link) => ([\n        <span key={ 1 } className='Nav-linkText'>{ link.name }</span>,\n        (link.status !== undefined ?\n          <span key={ 2 } className={ 'Nav-linkFlair ' + 'is-state' + link.status } >{ ExampleStatus[link.status] }</span> :\n          null)\n      ]) }\n      />\n    );\n\n    return (\n      <Fabric className={ css('ms-App', 'ms-App--' + ResponsiveMode[responsiveMode]) }>\n\n        <div className='ms-App-header'>\n          <Header\n            title={ appDefinition.appTitle }\n            sideLinks={ appDefinition.headerLinks }\n            isMenuVisible={ isMenuVisible }\n            onIsMenuVisibleChanged={ this._onIsMenuVisibleChanged }\n          />\n        </div>\n\n        { (responsiveMode > ResponsiveMode.large) ? (\n          <div className='ms-App-nav'>\n            { navPanel }\n          </div>\n        ) : (null) }\n\n        <div className='ms-App-content' data-is-scrollable='true'>\n          { this.props.children }\n        </div>\n\n        { (responsiveMode <= ResponsiveMode.large) ? (\n          <Panel\n            className='ms-App-navPanel ms-font-m'\n            isOpen={ isMenuVisible }\n            isLightDismiss={ true }\n            type={ PanelType.smallFixedNear }\n            onDismiss={ this._onIsMenuVisibleChanged.bind(this, false) }>\n            { navPanel }\n          </Panel>\n        ) : (null) }\n      </Fabric>\n    );\n  }\n\n  private _onIsMenuVisibleChanged(isMenuVisible: boolean) {\n    this.setState({ isMenuVisible });\n  }\n\n  private _onLinkClick() {\n    this.setState({ isMenuVisible: false });\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}