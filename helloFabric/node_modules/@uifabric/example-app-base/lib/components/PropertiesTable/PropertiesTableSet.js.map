{"version":3,"sources":["components/PropertiesTable/PropertiesTableSet.tsx"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAC/B,sDAAuE;AACvE,qDAAoD;AAEpD,sDAAqD;AAMrD;IAAwC,sCAAmE;IAKzG,4BAAY,KAA+B;QAA3C,YACE,kBAAM,KAAK,CAAC,SAyBb;QAxBO,IAAA,mCAAa,EAAE,mCAAa,EAAE,uBAAO,CAAW;QACtD,IAAI,GAAG,CAAC;QACR,IAAI,UAAU,GAAgB,EAAE,CAAC;QAEjC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,GAAG,GAAG,EAAE,CAAC;YACT,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,GAAG,IAAI,MAAM,EAAb,CAAa,CAAC,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,CAAC,CAAC;YAC1C,GAAG,GAAG,OAAO,CAAC,aAAa,GAAG,aAAa,GAAG,WAAW,CAAC,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;QACxF,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,IAAY;gBACpC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,aAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,UAAU,GAAG,aAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAED,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,UAAU;SACvB,CAAC;;IACJ,CAAC;IAEM,uCAAU,GAAjB;QAAA,iBAOC;QANC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,IAAe;YAC/C,OAAA,CAAC,oBAAC,iCAAe,IACf,GAAG,EAAG,IAAI,CAAC,YAAY,EACvB,KAAK,EAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,EAClH,UAAU,EAAG,IAAI,CAAC,QAAQ,EAC1B,YAAY,EAAG,IAAI,CAAC,YAAY,KAAK,oBAAY,CAAC,IAAI,GAAK,CAAC;QAJ9D,CAI8D,CAAC,CAAC;IACpE,CAAC;IAEM,mCAAM,GAAb;QACE,MAAM,CAAC,CACL,iCACI,IAAI,CAAC,UAAU,EAAE,CACf,CACP,CAAC;IACJ,CAAC;IACH,yBAAC;AAAD,CAjDA,AAiDC,CAjDuC,KAAK,CAAC,SAAS;AACvC,+BAAY,GAAG;IAC3B,KAAK,EAAE,YAAY;CACpB,CAAC;AAHS,gDAAkB","file":"components/PropertiesTable/PropertiesTableSet.js","sourcesContent":["import * as React from 'react';\nimport { IProperty, PropertyType } from '../../utilities/parser/index';\nimport { PropertiesTable } from './PropertiesTable';\nimport { IPropertiesTableSetProps } from './PropertiesTableSet.Props';\nimport { parse } from '../../utilities/parser/index';\n\nexport interface IPropertiesTableSetState {\n  properties: Array<IProperty>;\n}\n\nexport class PropertiesTableSet extends React.Component<IPropertiesTableSetProps, IPropertiesTableSetState> {\n  public static defaultProps = {\n    title: 'Properties'\n  };\n\n  constructor(props: IPropertiesTableSetProps) {\n    super(props);\n    let { componentName, componentPath, sources } = props;\n    let src;\n    let properties: IProperty[] = [];\n\n    if (sources) {\n      src = '';\n      sources.forEach(source => src += source);\n    } else if (componentPath && componentName) {\n      src = require(componentPath + componentName + '.Props.ts');\n    } else {\n      throw new Error('PropertiesTableSet was used without source or a componentPath/name');\n    }\n\n    if (props.renderOnly) {\n      props.renderOnly.forEach((item: string) => {\n        properties = properties.concat(parse(src, item));\n      });\n    } else {\n      properties = parse(src);\n    }\n\n    this.state = {\n      properties: properties\n    };\n  }\n\n  public renderEach() {\n    return this.state.properties.map((item: IProperty) =>\n      (<PropertiesTable\n        key={ item.propertyName }\n        title={ item.name === ('I' + this.props.componentName) ? (this.props.componentName + ' class') : item.propertyName }\n        properties={ item.property }\n        renderAsEnum={ item.propertyType === PropertyType.enum } />));\n  }\n\n  public render() {\n    return (\n      <div>\n        { this.renderEach() }\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}