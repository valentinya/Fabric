{"version":3,"sources":["components/ExampleCard/ExampleCard.tsx"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAC/B,kEAA2D;AAC3D,8BAA4B;AAC5B,4DAAuE;AACvE,oDAAmD;AAgBnD;IAAiC,+BAAqD;IAEpF,qBAAY,KAAwB;QAApC,YACE,kBAAM,KAAK,CAAC,SAOb;QALC,KAAI,CAAC,KAAK,GAAG;YACX,aAAa,EAAE,KAAK;SACrB,CAAC;QAEF,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC/D,CAAC;IAEM,4BAAM,GAAb;QACQ,IAAA,eAAsD,EAApD,gBAAK,EAAE,cAAI,EAAE,sBAAQ,EAAE,kCAAc,CAAgB;QACrD,IAAA,wCAAa,CAAgB;QACrC,IAAI,SAAS,GAAG,aAAa,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAAC;QAEpF,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,SAAS;YACxB,6BAAK,SAAS,EAAC,oBAAoB;gBACjC,8BAAM,SAAS,EAAC,6BAA6B,IAAG,KAAK,CAAS;gBAC9D,6BAAK,SAAS,EAAC,qCAAqC,IAChD,IAAI,GAAG,CACP,oBAAC,eAAM,IAAC,UAAU,EAAG,mBAAU,CAAC,IAAI,EAAG,IAAI,EAAC,OAAO,EACjD,OAAO,EAAG,IAAI,CAAC,kBAAkB,EAAG,SAAS,EAAG,eAAG,CAAC,wBAAwB,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC,IAC3G,aAAa,GAAG,WAAW,GAAG,WAAW,CACpC,CACV,GAAG,CAAC,IAAI,CAAC,CACN,CACF;YAEN,6BAAK,SAAS,EAAC,kBAAkB,IAC7B,aAAa,IAAI,CACjB,oBAAC,qBAAS,QACN,IAAI,CACI,CACb,CACG;YAEN,6BAAK,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,EAAE,mBAAmB,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,wBAAsB,MAAM,IAC9G,QAAQ,CACN;YAEJ,IAAI,CAAC,eAAe,EAAE,CACpB,CACP,CAAC;IACJ,CAAC;IAEO,qCAAe,GAAvB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,yBAAyB;gBACtC,6BAAK,SAAS,EAAC,iBAAiB;oBAC9B,qCAAW;oBACT,IAAI,CAAC,KAAK,CAAC,GAAG,CACZ;gBACN,6BAAK,SAAS,EAAC,mBAAmB;oBAChC,yCAAe;oBACb,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,CACF,CACP,CAAC;QACJ,CAAC;IACH,CAAC;IAEO,wCAAkB,GAA1B;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,aAAa,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa;SACzC,CAAC,CAAC;IACL,CAAC;IACH,kBAAC;AAAD,CAtEA,AAsEC,CAtEgC,KAAK,CAAC,SAAS,GAsE/C;AAtEY,kCAAW","file":"components/ExampleCard/ExampleCard.js","sourcesContent":["import * as React from 'react';\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\nimport './ExampleCard.scss';\nimport { Button, ButtonType } from 'office-ui-fabric-react/lib/Button';\nimport { Highlight } from '../Highlight/Highlight';\n\nexport interface IExampleCardProps {\n  title: string;\n  isOptIn?: boolean;\n  code?: string;\n  children?: any;\n  isRightAligned?: boolean;\n  dos?: JSX.Element;\n  donts?: JSX.Element;\n}\n\nexport interface IExampleCardState {\n  isCodeVisible?: boolean;\n}\n\nexport class ExampleCard extends React.Component<IExampleCardProps, IExampleCardState> {\n\n  constructor(props: IExampleCardProps) {\n    super(props);\n\n    this.state = {\n      isCodeVisible: false\n    };\n\n    this._onToggleCodeClick = this._onToggleCodeClick.bind(this);\n  }\n\n  public render() {\n    const { title, code, children, isRightAligned } = this.props;\n    const { isCodeVisible } = this.state;\n    let rootClass = 'ExampleCard' + (this.state.isCodeVisible ? ' is-codeVisible' : '');\n\n    return (\n      <div className={ rootClass }>\n        <div className='ExampleCard-header'>\n          <span className='ExampleCard-title ms-font-l'>{ title }</span>\n          <div className='ExampleCard-toggleButtons ms-font-l'>\n            { code ? (\n              <Button buttonType={ ButtonType.icon } icon='Embed'\n                onClick={ this._onToggleCodeClick } className={ css('ExampleCard-codeButton', { 'is-active': isCodeVisible }) }>\n                { isCodeVisible ? 'Hide code' : 'Show code' }\n              </Button>\n            ) : (null) }\n          </div>\n        </div>\n\n        <div className='ExampleCard-code'>\n          { isCodeVisible && (\n            <Highlight>\n              { code }\n            </Highlight>\n          ) }\n        </div>\n\n        <div className={ css('ExampleCard-example', { ' is-right-aligned': (isRightAligned) }) } data-is-scrollable='true'>\n          { children }\n        </div>\n\n        { this._getDosAndDonts() }\n      </div>\n    );\n  }\n\n  private _getDosAndDonts() {\n    if (this.props.dos && this.props.donts) {\n      return (\n        <div className='ExampleCard-dosAndDonts'>\n          <div className='ExampleCard-dos'>\n            <h4>Do</h4>\n            { this.props.dos }\n          </div>\n          <div className='ExampleCard-donts'>\n            <h4>Do not</h4>\n            { this.props.donts }\n          </div>\n        </div>\n      );\n    }\n  }\n\n  private _onToggleCodeClick() {\n    this.setState({\n      isCodeVisible: !this.state.isCodeVisible\n    });\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}